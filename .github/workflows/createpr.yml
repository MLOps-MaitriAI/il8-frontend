name: Merge Staging to Production (Excluding .github)

on:
  push:
    branches:
      - staging

jobs:
  test_and_build_frontend:
    # ... (keep the existing test_and_build_frontend job as is)

  create_pull_request:
    needs: test_and_build_frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Create temporary branch without .github folder
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b temp-staging-branch staging
          git rm -r --cached .github
          git commit -m "Remove .github folder for merging" || echo "No changes to commit"
          git push origin temp-staging-branch
      - name: Check for differences
        id: diff_check
        run: |
          git fetch origin production:production
          if git diff --quiet production temp-staging-branch; then
            echo "No differences found between production and temp-staging-branch"
            echo "::set-output name=has_diff::false"
          else
            echo "Differences found between production and temp-staging-branch"
            echo "::set-output name=has_diff::true"
          fi
      - name: Create Pull Request
        if: steps.diff_check.outputs.has_diff == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.IL8_CI_CD }}
        run: |
          pr_url=$(gh pr create --base production --head temp-staging-branch --title "Merge Staging to Production (Excluding .github)" --body "This PR merges the latest changes from the staging branch into the production branch, excluding the .github folder. Please review and approve to proceed with the merge.")
          echo "PR_URL=$pr_url" >> $GITHUB_ENV
      - name: Output PR URL
        if: steps.diff_check.outputs.has_diff == 'true'
        run: echo "Pull request created - ${{ env.PR_URL }}"
      - name: No changes to merge
        if: steps.diff_check.outputs.has_diff == 'false'
        run: |
          echo "No changes to merge. Production is already up to date with staging (excluding .github folder)."
          git push origin --delete temp-staging-branch

  merge_pull_request:
    needs: create_pull_request
    runs-on: ubuntu-latest
    if: ${{ needs.create_pull_request.outputs.pr_created == 'true' }}
    steps:
      # ... (keep the existing merge_pull_request job steps as is)
